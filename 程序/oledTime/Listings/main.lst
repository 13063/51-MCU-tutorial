C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 22:03:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\EE\32\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\DRIVERS;.\src) DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <ds1302.H>
   2          #include <public.H>
   3          #include <key.H>
   4          #include <ssd1306.H>
   5          
   6          uchar k,TimeSetSelect,TimeSetFlashFlag;
   7          uchar MODE=0;
   8          struct RTCtime time;
   9          struct RTCtime* p;
  10          void  setTime();
  11          void showTime();
  12          void Timer0Init(void);
  13          void Timer0_Routine();
  14          uchar i;
  15          uchar *pti;                                                                     //指向存储变量的指针
  16          uchar *ptime;                                                                   //指向全局变量的指针
  17          struct RTCtime ti;                                                              //存储变量用于修改
  18          
  19          
  20          void showTime()
  21          {
  22   1              
  23   1              ti=ds1302ReadTime();
  24   1              
  25   1              //字宽8，高16
  26   1              OLED_ShowNum(0,0,ti.hour,2,16);                                 //显示时
  27   1              OLED_ShowChar(16,0,':',16);
  28   1              OLED_ShowNum(24,0,ti.min,2,16);                                 //显示分
  29   1              OLED_ShowChar(40,0,':',16);
  30   1              OLED_ShowNum(48,0,ti.sec,2,16);                                 //显示秒
  31   1              
  32   1              OLED_ShowNum(0,2,ti.year,2,16);                                 //显示年
  33   1              OLED_ShowChar(16,2,'-',16);
  34   1              OLED_ShowNum(24,2,ti.mon,2,16);                                 //显示月
  35   1              OLED_ShowChar(40,2,'-',16);
  36   1              OLED_ShowNum(48,2,ti.date,2,16);                                //显示日
  37   1      }
  38          
  39          ///////修改全局变量time////////
  40          void setTime()                  
  41          {
  42   1              uchar hour=time.hour;
  43   1              
  44   1              
  45   1              OLED_ShowChar(16,0,':',16);
  46   1              OLED_ShowChar(40,0,':',16);
  47   1              OLED_ShowChar(16,2,'-',16);
  48   1              OLED_ShowChar(40,2,'-',16);
  49   1              if(k==2)                                                                                //按键2按下
  50   1              {
  51   2                      TimeSetSelect++;                                                        //设置选择位加1
  52   2                      TimeSetSelect%=6;                                                       //越界清零
  53   2              }
  54   1              if(k==3)                                                                                //按键3按下
C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 22:03:35 PAGE 2   

  55   1              {
  56   2                      (*(ptime+TimeSetSelect))++;
  57   2                      if(time.year>99){time.year=0;}                          //年越界判断
  58   2                      if(time.mon>12){time.mon=1;}                            //月越界判断
  59   2                      if( time.mon==1 || time.mon==3 || time.mon==5 || time.mon==7 || 
  60   2                              time.mon==8 || time.mon==10 || time.mon==12)//日越界判断
  61   2                      {
  62   3                              if(time.date>31){time.date=1;}                  //大月
  63   3                      }
  64   2                      else if(time.mon==4 || time.mon==6 || time.mon==9 || time.mon==11)
  65   2                      {
  66   3                              if(time.date>30){time.date=1;}                  //小月
  67   3                      }
  68   2                      else if(time.mon==2)
  69   2                      {
  70   3                              if(time.year%4==0)
  71   3                              {
  72   4                                      if(time.date>29){time.date=1;}          //闰年2月
  73   4                              }
  74   3                              else
  75   3                              {
  76   4                                      if(time.date>28){time.date=1;}          //平年2月
  77   4                              }
  78   3                      }
  79   2                      
  80   2                      if(time.hour>23){time.hour=0;}                          //时越界判断
  81   2                      if(time.min>59){time.min=0;}                            //分越界判断
  82   2                      if(time.sec>59){time.sec=0;}                            //秒越界判断
  83   2              }
  84   1              if(k==4)//按键4按下
  85   1              {
  86   2                      (*(ptime+TimeSetSelect))--;                                     //时间设置位数值减1
  87   2                      if(time.year<0){time.year=99;}                          //年越界判断
  88   2                      if(time.mon<1){time.mon=12;}                            //月越界判断
  89   2                      if( time.mon==1 || time.mon==3 || time.mon==5 || time.mon==7 || 
  90   2                              time.mon==8 || time.mon==10 || time.mon==12)//日越界判断
  91   2                      {
  92   3                              if(time.date<1){time.date=31;}                  //大月
  93   3                              if(time.date>31){time.date=1;}
  94   3                      }
  95   2                      else if(time.mon==4 || time.mon==6 || time.mon==9 || time.mon==11)
  96   2                      {
  97   3                              if(time.date<1){time.date=30;}                  //小月
  98   3                              if(time.date>30){time.date=1;}
  99   3                      }
 100   2                      else if(time.mon==2)
 101   2                      {
 102   3                              if(time.year%4==0)
 103   3                              {
 104   4                                      if(time.date<1){time.date=29;}          //闰年2月
 105   4                                      if(time.date>29){time.date=1;}
 106   4                              }
 107   3                              else
 108   3                              {
 109   4                                      if(time.date<1){time.date=28;}          //平年2月
 110   4                                      if(time.date>28){time.date=1;}
 111   4                              }
 112   3                      }
 113   2              }
 114   1              if(time.hour<0){time.hour=23;}                                  //时越界判断
 115   1              if(time.min<0){time.min=59;}                                    //分越界判断
 116   1              if(time.sec<0){time.sec=59;}                                    //秒越界判断
C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 22:03:35 PAGE 3   

 117   1      
 118   1              //更新显示，根据TimeSetSelect和TimeSetFlashFlag判断可完成闪烁功能
 119   1              if(TimeSetSelect==0 && TimeSetFlashFlag==1){OLED_ShowString(0,2,"  ",16);}
 120   1              else {OLED_ShowNum(0,2,time.year,2,16);}
 121   1              if(TimeSetSelect==1 && TimeSetFlashFlag==1){OLED_ShowString(24,2,"  ",16);}
 122   1              else {OLED_ShowNum(24,2,time.mon,2,16);}
 123   1              if(TimeSetSelect==2 && TimeSetFlashFlag==1){OLED_ShowString(48,2,"  ",16);}
 124   1              else {OLED_ShowNum(48,2,time.date,2,16);}
 125   1              if(TimeSetSelect==3 && TimeSetFlashFlag==1){OLED_ShowString(0,0,"  ",16);}
 126   1              else {OLED_ShowNum(0,0,time.hour,2,16);}
 127   1              if(TimeSetSelect==4 && TimeSetFlashFlag==1){OLED_ShowString(24,0,"  ",16);}
 128   1              else {OLED_ShowNum(24,0,time.min,2,16);}
 129   1              if(TimeSetSelect==5 && TimeSetFlashFlag==1){OLED_ShowString(48,0,"  ",16);}
 130   1              else {OLED_ShowNum(48,0,time.sec,2,16);}
 131   1      }
 132          
 133          
 134          
 135          
 136          
 137          void main()
 138          {
 139   1              OLED_Init();                                            //初始化
 140   1              OLED_Clear();
 141   1              ds1302Init();                                   //初始化1302
 142   1              Timer0Init();                                   //初始化定时器
 143   1      
 144   1              ti=ds1302ReadTime();                    //读取RTC时钟给ti结构体
 145   1                      
 146   1              ptime=&(time.year);
 147   1              pti=&(ti.year);
 148   1              
 149   1              for(i=0;i<7;i++)
 150   1              {
 151   2                      *(ptime+i)=*(pti+i);            //将读到的RTC时间给time结构体，相当于初始化time
 152   2              }
 153   1      //      OLED_ShowString(1,0,"hh",16);
 154   1      //      lcdShowString(1,1,"  -  -  ");  //静态字符初始化显示
 155   1      //      lcdShowString(2,1,"  :  :  ");
 156   1              while(1)
 157   1              {
 158   2                      
 159   2                      k=key();
 160   2                      if(k==1)
 161   2                      {
 162   3                              if(MODE==0)
 163   3                              {
 164   4                                      MODE=1;
 165   4                                      TimeSetSelect=0;
 166   4                              }                                               //功能切换
 167   3                              else if(MODE==1)
 168   3                              {
 169   4                                      MODE=0;
 170   4                                      ds1302SetTime(time);
 171   4                              }
 172   3                      }
 173   2      
 174   2                      switch(MODE)                            //根据不同的功能执行不同的函数
 175   2                      {
 176   3                              case 0:showTime();break;
 177   3                              case 1:setTime();break;
 178   3                      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 22:03:35 PAGE 4   

 179   2              }
 180   1      }
 181          
 182          void Timer0Init(void)
 183          {
 184   1              TMOD &= 0xF0;                                   //设置定时器模式
 185   1              TMOD |= 0x01;                                   //设置定时器模式
 186   1              TL0 = 0x18;                                             //设置定时初值
 187   1              TH0 = 0xFC;                                             //设置定时初值
 188   1              TF0 = 0;                                                //清除TF0标志
 189   1              TR0 = 1;                                                //定时器0开始计时
 190   1              ET0=1;
 191   1              EA=1;
 192   1              PT0=0;
 193   1      }
 194          
 195          void Timer0_Routine() interrupt 1
 196          {
 197   1              static unsigned int T0Count;
 198   1              TL0 = 0x18;                                             //设置定时初值
 199   1              TH0 = 0xFC;                                             //设置定时初值
 200   1              T0Count++;
 201   1              if(T0Count>=200)                                //每500ms进入一次
 202   1              {
 203   2                      T0Count=0;
 204   2                      TimeSetFlashFlag=!TimeSetFlashFlag;//闪烁标志位取反
 205   2              }
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1793    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =     30       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
